{
  "address": "0x15b07030071a316Fdff91688A0e4356E94599d42",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddress2Amt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1c3abcfccebdadc41e8f9cfd427c3559290ffef98a0b278e855ec11ae0f20b0b",
  "receipt": {
    "to": null,
    "from": "0x800BE95B215034A3Cc79701793539a2abBf84dc6",
    "contractAddress": "0x15b07030071a316Fdff91688A0e4356E94599d42",
    "transactionIndex": 9,
    "gasUsed": "830948",
    "logsBloom": "0x
    "blockHash": "0x63e930633be1dc777303e6783576a71aa1dab8d4aba39a1a5a521159f72b6b18",
    "transactionHash": "0x1c3abcfccebdadc41e8f9cfd427c3559290ffef98a0b278e855ec11ae0f20b0b",
    "logs": [],
    "blockNumber": 7763252,
    "cumulativeGasUsed": "2675817",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "fa3b0f2d16a4e1cd87ded7392b55a379",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddress2Amt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Hritik Shelar\",\"details\":\"This implements price feed as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Funding contract sample\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function accepts the funds after some threshold of 50$ and above\"}},\"notice\":\"This contract creates a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title Funding contract sample\\n * @author Hritik Shelar\\n * @notice This contract creates a sample funding contract\\n * @dev This implements price feed as our library\\n */\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  uint256 public constant MIN_USD = 50 * 1e18;\\n\\n  address[] private s_funders;\\n  mapping(address => uint256) private s_address2Amt;\\n\\n  address private immutable i_owner;\\n\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier isOwner() {\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  /**\\n   * @notice This function accepts the funds after some threshold of 50$ and above\\n   */\\n  function fund() public payable {\\n    require(msg.value.converter(s_priceFeed) >= MIN_USD, \\\"Not enough\\\");\\n    s_funders.push(msg.sender);\\n    s_address2Amt[msg.sender] += msg.value;\\n  }\\n\\n  function withdraw() public isOwner {\\n    for (uint256 i = 0; i < s_funders.length; i++) {\\n      address funder = getFunder(i);\\n      s_address2Amt[funder] = 0;\\n    }\\n\\n    s_funders = new address[](0);\\n    (bool isSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\n      \\\"\\\"\\n    );\\n    require(isSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getAddress2Amt(address funder) public view returns (uint256) {\\n    return s_address2Amt[funder];\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x3f287aac50f43a7f1a00365a90ff526ca6c13b2316f936f82867871f472ffebd\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    // AggregatorV3Interface pricefeed = AggregatorV3Interface(\\n    //   0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    // );\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    return uint256(price * 1e18);\\n  }\\n\\n  function converter(uint256 eth, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 price = getPrice(priceFeed);\\n    uint256 ethInUsd = (price * eth) / 1e18;\\n    return ethInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0x5574a7b66d3496851abecec591a7046604744ec6d42b1980960f4966fb7fd2f7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f05380380610f0583398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610da661015f600039600081816102f301526105000152610da66000f3fe6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd146100fa578063b60d428814610125578063d7b4750c1461012f578063dad9478d1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b8578063893d20e8146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b6040516100af919061076e565b60405180910390f35b3480156100c457600080fd5b506100cd6102f1565b005b3480156100db57600080fd5b506100e46104fc565b6040516100f191906107ca565b60405180910390f35b34801561010657600080fd5b5061010f610524565b60405161011c9190610844565b60405180910390f35b61012d6101a9565b005b34801561013b57600080fd5b5061015660048036038101906101519190610890565b61054e565b60405161016391906107ca565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e9565b610595565b6040516101a0919061076e565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105de90919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610973565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109c2565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610376576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103ec5760006103918261054e565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103e4906109f6565b915050610379565b50600067ffffffffffffffff81111561040857610407610a3e565b5b6040519080825280602002602001820160405280156104365781602001602082028036833780820191505090505b506000908051906020019061044c9291906106ae565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047390610a9e565b60006040518083038185875af1925050503d80600081146104b0576040519150601f19603f3d011682016040523d82523d6000602084013e6104b5565b606091505b50509050806104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090610aff565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061056357610562610b1f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806105ea8361061a565b90506000670de0b6b3a764000085836106039190610b4e565b61060d9190610bbf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610c7d565b505050915050670de0b6b3a7640000816106a69190610cf8565b915050919050565b828054828255906000526020600020908101928215610727579160200282015b828111156107265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ce565b5b5090506107349190610738565b5090565b5b80821115610751576000816000905550600101610739565b5090565b6000819050919050565b61076881610755565b82525050565b6000602082019050610783600083018461075f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b482610789565b9050919050565b6107c4816107a9565b82525050565b60006020820190506107df60008301846107bb565b92915050565b6000819050919050565b600061080a61080561080084610789565b6107e5565b610789565b9050919050565b600061081c826107ef565b9050919050565b600061082e82610811565b9050919050565b61083e81610823565b82525050565b60006020820190506108596000830184610835565b92915050565b600080fd5b61086d81610755565b811461087857600080fd5b50565b60008135905061088a81610864565b92915050565b6000602082840312156108a6576108a561085f565b5b60006108b48482850161087b565b91505092915050565b6108c6816107a9565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe61085f565b5b600061090d848285016108d4565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b600061095d600a83610916565b915061096882610927565b602082019050919050565b6000602082019050818103600083015261098c81610950565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cd82610755565b91506109d883610755565b92508282019050808211156109f0576109ef610993565b5b92915050565b6000610a0182610755565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3357610a32610993565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a88600083610a6d565b9150610a9382610a78565b600082019050919050565b6000610aa982610a7b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ae9600b83610916565b9150610af482610ab3565b602082019050919050565b60006020820190508181036000830152610b1881610adc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5982610755565b9150610b6483610755565b9250828202610b7281610755565b91508282048414831517610b8957610b88610993565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bca82610755565b9150610bd583610755565b925082610be557610be4610b90565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0f81610bf0565b8114610c1a57600080fd5b50565b600081519050610c2c81610c06565b92915050565b6000819050919050565b610c4581610c32565b8114610c5057600080fd5b50565b600081519050610c6281610c3c565b92915050565b600081519050610c7781610864565b92915050565b600080600080600060a08688031215610c9957610c9861085f565b5b6000610ca788828901610c1d565b9550506020610cb888828901610c53565b9450506040610cc988828901610c68565b9350506060610cda88828901610c68565b9250506080610ceb88828901610c1d565b9150509295509295909350565b6000610d0382610c32565b9150610d0e83610c32565b9250828202610d1c81610c32565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d5457610d53610993565b5b8282058414831517610d6957610d68610993565b5b509291505056fea26469706673582212204be4d04530bb805f141552864fa19d403a99ef3609795cc3e26221d4e81f96a564736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd146100fa578063b60d428814610125578063d7b4750c1461012f578063dad9478d1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b8578063893d20e8146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b6040516100af919061076e565b60405180910390f35b3480156100c457600080fd5b506100cd6102f1565b005b3480156100db57600080fd5b506100e46104fc565b6040516100f191906107ca565b60405180910390f35b34801561010657600080fd5b5061010f610524565b60405161011c9190610844565b60405180910390f35b61012d6101a9565b005b34801561013b57600080fd5b5061015660048036038101906101519190610890565b61054e565b60405161016391906107ca565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e9565b610595565b6040516101a0919061076e565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105de90919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610973565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109c2565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610376576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103ec5760006103918261054e565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103e4906109f6565b915050610379565b50600067ffffffffffffffff81111561040857610407610a3e565b5b6040519080825280602002602001820160405280156104365781602001602082028036833780820191505090505b506000908051906020019061044c9291906106ae565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161047390610a9e565b60006040518083038185875af1925050503d80600081146104b0576040519150601f19603f3d011682016040523d82523d6000602084013e6104b5565b606091505b50509050806104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090610aff565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061056357610562610b1f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806105ea8361061a565b90506000670de0b6b3a764000085836106039190610b4e565b61060d9190610bbf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610c7d565b505050915050670de0b6b3a7640000816106a69190610cf8565b915050919050565b828054828255906000526020600020908101928215610727579160200282015b828111156107265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ce565b5b5090506107349190610738565b5090565b5b80821115610751576000816000905550600101610739565b5090565b6000819050919050565b61076881610755565b82525050565b6000602082019050610783600083018461075f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b482610789565b9050919050565b6107c4816107a9565b82525050565b60006020820190506107df60008301846107bb565b92915050565b6000819050919050565b600061080a61080561080084610789565b6107e5565b610789565b9050919050565b600061081c826107ef565b9050919050565b600061082e82610811565b9050919050565b61083e81610823565b82525050565b60006020820190506108596000830184610835565b92915050565b600080fd5b61086d81610755565b811461087857600080fd5b50565b60008135905061088a81610864565b92915050565b6000602082840312156108a6576108a561085f565b5b60006108b48482850161087b565b91505092915050565b6108c6816107a9565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe61085f565b5b600061090d848285016108d4565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676800000000000000000000000000000000000000000000600082015250565b600061095d600a83610916565b915061096882610927565b602082019050919050565b6000602082019050818103600083015261098c81610950565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cd82610755565b91506109d883610755565b92508282019050808211156109f0576109ef610993565b5b92915050565b6000610a0182610755565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3357610a32610993565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a88600083610a6d565b9150610a9382610a78565b600082019050919050565b6000610aa982610a7b565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ae9600b83610916565b9150610af482610ab3565b602082019050919050565b60006020820190508181036000830152610b1881610adc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5982610755565b9150610b6483610755565b9250828202610b7281610755565b91508282048414831517610b8957610b88610993565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bca82610755565b9150610bd583610755565b925082610be557610be4610b90565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c0f81610bf0565b8114610c1a57600080fd5b50565b600081519050610c2c81610c06565b92915050565b6000819050919050565b610c4581610c32565b8114610c5057600080fd5b50565b600081519050610c6281610c3c565b92915050565b600081519050610c7781610864565b92915050565b600080600080600060a08688031215610c9957610c9861085f565b5b6000610ca788828901610c1d565b9550506020610cb888828901610c53565b9450506040610cc988828901610c68565b9350506060610cda88828901610c68565b9250506080610ceb88828901610c1d565b9150509295509295909350565b6000610d0382610c32565b9150610d0e83610c32565b9250828202610d1c81610c32565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d5457610d53610993565b5b8282058414831517610d6957610d68610993565b5b509291505056fea26469706673582212204be4d04530bb805f141552864fa19d403a99ef3609795cc3e26221d4e81f96a564736f6c63430008110033",
  "devdoc": {
    "author": "Hritik Shelar",
    "details": "This implements price feed as our library",
    "kind": "dev",
    "methods": {},
    "title": "Funding contract sample",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function accepts the funds after some threshold of 50$ and above"
      }
    },
    "notice": "This contract creates a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_address2Amt",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}